@page
@model VillageDrill.Areas.Admin.Pages.OrdersModel
@{
    ViewData.Add("Title", "Orders");
    ViewData.Add("includeTitle", "true");
}

<!-- Nav Tabs -->
<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link active" href="#allTab">All</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="#pendingTab">Pending</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="#recievedTab">Recieved</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="#overdueTab">Overdue</a>
    </li>
</ul>

<!-- Tab panes -->
<div class="tab-content">
    <div id="allTab" class="tab-pane active">
        <table class="table table-borderless data-table">
            <thead>
                <tr>
                    <th>Delivered</th>
                    <th>Vendor</th>
                    <th>Date Ordered</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Orders)
                {
                <tr>
                    @if (order.Status == true)
                    {
                        <td><i class="far fa-check-square text-info fa-2x"></i></td>
                    }
                    else
                    {
                        <td></td>
                    }
                    <td>
                        @Html.DisplayFor(m => order.Vendor.VendorName)
                    </td>
                    <td>
                        @Html.DisplayFor(m => order.DateOrdered)
                    </td>
                    <td>
                        <a class="btn btn-outline-primary mr-2" asp-page="./OrderDetails" asp-route-id="@order.PurchaseOrderID"><i class="fas fa-info"></i></a>
                        @if (!order.Status)
                        {
                            <!-- Show receive button for pending orders only -->
                            <a class="btn btn-primary" asp-page="./OrderReceive" asp-route-id="@order.PurchaseOrderID">Receive</a>
                        }
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
    <div id="pendingTab" class="tab-pane fade">
        <table class="table table-borderless data-table">
            <thead>
                <tr>
                    <th>Vendor</th>
                    <th>Date Ordered</th>
                    <th>Delivered</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Orders)
                {
                    <!-- Order has not been received -->
                    @if (!order.Status)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(m => order.Vendor.VendorName)
                            </td>
                            <td>
                                @Html.DisplayFor(m => order.DateOrdered)
                            </td>
                            <td>@Html.DisplayFor(m => order.Status)</td>
                            <td><a class="btn btn-primary" asp-page="./OrderDetails" asp-route-id="@order.PurchaseOrderID">Details</a></td>
                            <td><a class="btn btn-primary" asp-page="./OrderReceive" asp-route-id="@order.PurchaseOrderID">Receive</a></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <div id="recievedTab" class="tab-pane fade">
        <table class="table table-borderless data-table">
            <thead>
                <tr>
                    <th>Vendor</th>
                    <th>Date Ordered</th>
                    <th>Delivered</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Orders)
                {
                    <!-- Order has been received -->
                    @if (order.Status)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(m => order.Vendor.VendorName)
                            </td>
                            <td>
                                @Html.DisplayFor(m => order.DateOrdered)
                            </td>
                            <td>@Html.DisplayFor(m => order.Status)</td>
                            <td><a class="btn btn-primary" asp-page="./OrderDetails" asp-route-id="@order.PurchaseOrderID">Details</a></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <div id="overdueTab" class="tab-pane fade">
        <!-- Not sure it this can be implemented as is, are purchase orders tracking an expected arrival date? -->
    </div>
</div>

<!--Add Button-->
<a class="float-right" href="#"><i class="fas fa-plus-circle fa-3x"></i></a>

<!--Javascript-->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>

<script>
    $(document).ready(function () {
        $(".nav-tabs a").click(function () {
            $(this).tab('show');
        });
    });
</script>